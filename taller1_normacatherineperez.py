# -*- coding: utf-8 -*-
"""Taller1-NormaCatherinePerez.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gslg7S26DiBl2U9BrGEueytYz3chNoe3
"""

import numpy as np 
import time

"""1.	Tienen el siguiente arreglo : 

    arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

    Como es posible obtener el siguiente resultado:

    array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1])


"""

arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
b = arr[arr % 2 == 0]
print(np.insert(b,(1,2,3,4,5),-1))

"""2.	Tienen el siguiente input:
np.arange(10)

    Como se puede hacer para obtener el siguiente resultado:

    #> array([[0, 1, 2, 3, 4],
    
    #>        [5, 6, 7, 8, 9]])

"""

import numpy as np 
a=np.arange(10).reshape((2,5))
print(a)

"""3.	Con base en el siguiente input:

    a = np.arange(10).reshape(2,-1)

    b = np.repeat(1, 10).reshape(2,-1)

    Obtener el siguiente resultado

    #> array([[0, 1, 2, 3, 4],

    #>        [5, 6, 7, 8, 9],

    #>        [1, 1, 1, 1, 1],

    #>        [1, 1, 1, 1, 1]])

"""

a = np.arange(10).reshape(2,-1)
b = np.repeat(1, 10).reshape(2,-1)
print(np.vstack((a,b)))

"""4.	Con base en el siguiente input:

    a = np.array([1,2,3,2,3,4,3,4,5,6])

    b = np.array([7,2,10,2,7,4,9,4,9,8])

    Obtener el siguiente output

    array([2, 4])
 
"""

a = np.array([1,2,3,2,3,4,3,4,5,6])
b = np.array([7,2,10,2,7,4,9,4,9,8])
print(np.delete(a,(0,2,3,4,6,7,8,9)))

a = np.array([1,2,3,2,3,4,3,4,5,6])
b = np.array([7,2,10,2,7,4,9,4,9,8])
c= a[a==b]
c= list(set(c))
print(c)

"""5.	Del siguiente input:

    a = np.array([1,2,3,4,5])

    b = np.array([5,6,7,8,9])

    Obtener el siguiente output

    array([1,2,3,4])

"""

a = np.array([1,2,3,4,5])
b = np.array([5,6,7,8,9])
print(np.delete(a,-1))

"""6.	Con el siguiente input:

    a = np.array([2, 6, 1, 9, 10, 3, 27])

    Obtener:

    (array([6, 9, 10]),)

"""

a = np.array([2, 6, 1, 9, 10, 3, 27])
print(np.delete(a,(0,2,5,-1)))

"""7.	Invertir las filas de un arreglo de matriz 2D

    arr = np.arange(9).reshape(3,3)

    Output deseado:

    array([[6, 7, 8],

       [3, 4, 5],

       [0, 1, 2]])

"""

arr = np.arange(9).reshape(3,3)
arr[::-1]